if(COMMAND cmake_policy)
  cmake_policy(SET CMP0003 NEW)
endif(COMMAND cmake_policy)
cmake_minimum_required(VERSION 3.20)
project (C-GDY-SAC)


#add_library(my_maths src/my_maths.c)
#target_link_libraries(my_maths -L/opt/homebrew/lib -lMatrix -lm)
#add_library(datastruct src/atom.c src/molecule.c src/lattice.c src/misc.c)
#target_link_libraries(datastruct -L/opt/homebrew/lib -lMatrix -lm)
#add_library(parser src/parser.c)
#target_link_libraries(parser -L/opt/homebrew/lib -lpcre2-8)
#add_library(assemble src/assemble.c)
#target_link_libraries (assemble -L/opt/homebrew/lib -lMatrix -lm)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}")
option(BUILD_SHARED_LIBS "Build using shared libraries" ON)
add_library (msi_modeling src/atom.c src/molecule.c src/lattice.c src/misc.c src/my_maths.c src/assemble.c src/parser.c)
target_link_libraries(msi_modeling -L/opt/homebrew/lib -lpcre2-8 -lMatrix -lm)
target_compile_options(msi_modeling PRIVATE -I/opt/homebrew/include)
add_library (castepSeedGen src/cell.c src/castep_database.c)
target_compile_options(castepSeedGen PRIVATE -I/opt/homebrew/include -lMatrix -lm)
target_link_libraries(castepSeedGen msi_modeling)
add_library(task_control src/tasks.c src/param.c)
target_link_libraries(task_control castepSeedGen msi_modeling -Xpreprocessor -fopenmp -lomp -lMatrix -lm)
target_compile_options(task_control PRIVATE -I/opt/homebrew/include -lMatrix -lm -Xpreprocessor -fopenmp -lomp)
add_executable(test.o src/main.c)
target_link_libraries(test.o msi_modeling castepSeedGen task_control -lMatrix -lm)
target_compile_options(test.o PRIVATE -I/opt/homebrew/include -Xpreprocessor -fopenmp -lomp)

add_executable(test_math.o src/test.c)
target_compile_options(test_math.o PRIVATE -I${PROJECT_BINARY_DIR}/include)
set (CMAKE_C_FLAGS "-Wall -Wno-unused-function -O3 '-I${PROJECT_BINARY_DIR}/include'")
