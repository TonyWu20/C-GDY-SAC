if(COMMAND cmake_policy)
  cmake_policy(SET CMP0003 NEW)
endif(COMMAND cmake_policy)
cmake_minimum_required(VERSION 3.20)
project (C-GDY-SAC)
set(CMAKE_OSX_DEPLOYMENT_TARGET 12.1)


#add_library(my_maths src/my_maths.c)
#target_link_libraries(my_maths -L/opt/homebrew/lib -lMatrix -lm)
#add_library(datastruct src/atom.c src/molecule.c src/lattice.c src/misc.c)
#target_link_libraries(datastruct -L/opt/homebrew/lib -lMatrix -lm)
#add_library(parser src/parser.c)
#target_link_libraries(parser -L/opt/homebrew/lib -lpcre2-8)
#add_library(assemble src/assemble.c)
#target_link_libraries (assemble -L/opt/homebrew/lib -lMatrix -lm)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/lib")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/lib")
option(BUILD_SHARED_LIBS "Build using shared libraries" ON)
# add_library (msi_modeling src/atom.c src/molecule.c src/lattice.c src/misc.c src/my_maths.c src/assemble.c src/parser.c)
add_library(my_maths src/my_maths.c)
add_library(database src/database/database.c src/database/ads_database.c src/database/lattice_database.c)
target_link_libraries(database -L/opt/homebrew/lib/ -lcyaml -lyaml)
target_compile_options(database PRIVATE -I/opt/homebrew/include)
add_library (msi_modeling src/atom.c src/molecule.c src/lattice.c src/misc.c src/parser.c src/assemble.c)
add_library (castepSeedGen src/cell.c src/misc.c src/param.c)
target_link_libraries(castepSeedGen database my_maths -L/opt/homebrew/lib -lcyaml)
target_compile_options(castepSeedGen PRIVATE -I/opt/homebrew/include)
target_link_libraries(msi_modeling my_maths database -L/opt/homebrew/lib -lpcre2-8)
target_compile_options(msi_modeling PRIVATE -I/opt/homebrew/include -DUSE_SIMD)
# add_library (castepSeedGen src/cell.c src/castep_database.c)
# target_link_libraries(castepSeedGen msi_modeling)
add_library(task_control src/tasks.c src/param.c)
target_link_libraries(task_control castepSeedGen msi_modeling -Xpreprocessor -fopenmp -lomp -lcyaml)
target_compile_options(task_control PRIVATE -I/opt/homebrew/include -Xpreprocessor -fopenmp)
add_executable(test.o src/main.c)
target_link_libraries(test.o msi_modeling my_maths database castepSeedGen task_control -Xpreprocessor -fopenmp -lomp)
target_compile_options(test.o PRIVATE -I/opt/homebrew/include -Xpreprocessor -fopenmp)
# set (CMAKE_C_FLAGS "-Wall -I/opt/homebrew/include -L/opt/homebrew/lib -g -framework Accelerate -Xpreprocessor -fopenmp -lomp")
set (CMAKE_C_FLAGS "-Wall -O3")
